name: ppv&dlive M3U8 to M3U

on:
  workflow_dispatch:  # Allows manual triggering
  schedule:
    - cron: '0 6 * * *'  # Runs daily at 6 AM UTC (optional)

jobs:
  convert-m3u8-to-m3u:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js (if needed for processing)
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl wget
        
    - name: Download M3U8 files
      run: |
        # Your M3U8 file URLs
        M3U8_URL_1="https://iptV-scraper-re.vercel.app/ppv?timezone=cen"
        M3U8_URL_2="https://world-proxifier.xyz/daddylive/playlist.m3u8?timezone=cen"
        
        # Create output directory
        mkdir -p downloads
        
        # Download PPV M3U8 file
        echo "Downloading PPV M3U8 file..."
        wget -O downloads/ppv.m3u8 "$M3U8_URL_1" || curl -o downloads/ppv.m3u8 "$M3U8_URL_1"
        
        # Download DaddyLive M3U8 file
        echo "Downloading DaddyLive M3U8 file..."
        wget -O downloads/dlive.m3u8 "$M3U8_URL_2" || curl -o downloads/dlive.m3u8 "$M3U8_URL_2"
        
    - name: Convert M3U8 to M3U
      run: |
        # Create conversion script
        cat > convert_to_m3u.py << 'EOF'
        import os
        import re
        
        def convert_m3u8_to_m3u(input_file, output_file):
            """Convert M3U8 format to M3U format"""
            try:
                with open(input_file, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                # Remove M3U8 specific tags but keep essential ones
                lines = content.split('\n')
                m3u_lines = []
                
                for line in lines:
                    line = line.strip()
                    if not line:
                        continue
                    
                    # Keep M3U header
                    if line.startswith('#EXTM3U'):
                        m3u_lines.append(line)
                    # Keep track info
                    elif line.startswith('#EXTINF:'):
                        m3u_lines.append(line)
                    # Keep URLs (not starting with #)
                    elif not line.startswith('#'):
                        m3u_lines.append(line)
                    # Optionally keep some other tags
                    elif line.startswith('#EXTVLCOPT:'):
                        m3u_lines.append(line)
                
                # Write M3U file
                with open(output_file, 'w', encoding='utf-8') as f:
                    f.write('\n'.join(m3u_lines))
                
                print(f"Successfully converted {input_file} to {output_file}")
                return True
                
            except Exception as e:
                print(f"Error converting {input_file}: {str(e)}")
                return False
        
        # Convert both files
        os.makedirs('output', exist_ok=True)
        
        if os.path.exists('downloads/ppv.m3u8'):
            convert_m3u8_to_m3u('downloads/ppv.m3u8', 'output/ppv.m3u')
        
        if os.path.exists('downloads/dlive.m3u8'):
            convert_m3u8_to_m3u('downloads/dlive.m3u8', 'output/dlive.m3u')
        EOF
        
        # Run the conversion
        python3 convert_to_m3u.py
        
    - name: Display results
      run: |
        echo "=== Conversion Results ==="
        if [ -f "output/ppv.m3u" ]; then
          echo "✓ ppv.m3u created successfully"
          echo "Size: $(ls -lh output/ppv.m3u | awk '{print $5}')"
        fi
        
        if [ -f "output/dlive.m3u" ]; then
          echo "✓ dlive.m3u created successfully"
          echo "Size: $(ls -lh output/dlive.m3u | awk '{print $5}')"
        fi
        
        echo ""
        echo "=== Output Directory Contents ==="
        ls -la output/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: converted-m3u-files
        path: |
          output/*.m3u
          downloads/*.m3u8
        retention-days: 7

    - name: Commit and push results (optional)
      if: github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if [ -n "$(git status --porcelain)" ]; then
          git add output/
          git commit -m "Auto-update: Convert M3U8 to M3U files $(date '+%Y-%m-%d %H:%M:%S')"
          git push
        else
          echo "No changes to commit"
        fi
